// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Domain {
  id          String   @id @default(cuid())
  tokenId     String   @unique
  contractAddress String
  name        String
  description String?
  image       String?
  metadataUri String?
  owner       String
  isListed    Boolean  @default(false)
  listingPrice String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  offers      Offer[]
  analytics   DomainAnalytics[]
  
  @@map("domains")
}

model Offer {
  id              String   @id @default(cuid())
  offerId         String   @unique // From smart contract
  domainId        String
  domain          Domain   @relation(fields: [domainId], references: [id])
  buyer           String
  amount          String
  tokenAddress    String   // USDC or other token
  status          OfferStatus @default(PENDING)
  expiresAt       DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("offers")
}

model DomainAnalytics {
  id        String   @id @default(cuid())
  domainId  String
  domain    Domain   @relation(fields: [domainId], references: [id])
  date      DateTime
  pageViews Int      @default(0)
  uniqueVisitors Int @default(0)
  offersReceived Int @default(0)
  createdAt DateTime @default(now())
  
  @@unique([domainId, date])
  @@map("domain_analytics")
}

model PageGenerationQueue {
  id              String   @id @default(cuid())
  tokenId         String
  contractAddress String
  status          QueueStatus @default(PENDING)
  attempts        Int      @default(0)
  maxAttempts     Int      @default(3)
  errorMessage    String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("page_generation_queue")
}

enum OfferStatus {
  PENDING
  ACCEPTED
  REJECTED
  EXPIRED
  WITHDRAWN
}

enum QueueStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

